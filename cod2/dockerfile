# Verwendung eines schlanken und aktuellen Debian-Images
FROM debian:bookworm-slim

# Argument, um interaktive Abfragen während der Installation zu unterbinden
ARG DEBIAN_FRONTEND=noninteractive

# i386-Architektur für 32-Bit-Anwendungen hinzufügen und Abhängigkeiten installieren
# - xz-utils: zum Entpacken von .tar.xz-Archiven
# - wget: zum Herunterladen der Server-Dateien
# - lib32gcc-s1, libstdc++6:i386: Notwendige 32-Bit-Laufzeitbibliotheken für das alte Spiel
RUN dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    ca-certificates \
    xz-utils \
    lib32gcc-s1 \
    libstdc++6:i386 && \
    # Aufräumen, um das Image klein zu halten
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Einen unprivilegierten Benutzer erstellen, um den Server auszuführen (Sicherheits-Best-Practice)
RUN useradd -m -s /bin/bash cod2server

# Zu diesem Benutzer wechseln
USER cod2server

# Das Arbeitsverzeichnis für den Server festlegen
WORKDIR /home/cod2server/server

# Serverdateien herunterladen und direkt entpacken
# --strip-components=1 entfernt das übergeordnete Verzeichnis aus dem Archiv
RUN wget -qO- "http://linuxgsm.download/CallOfDuty2/cod2-lnxded-1.3-full.tar.xz" | \
    tar -xJ --strip-components=1

# Das Startskript in den Container kopieren und die Berechtigungen korrekt setzen
COPY --chown=cod2server:cod2server entrypoint.sh /home/cod2server/entrypoint.sh
RUN chmod +x /home/cod2server/entrypoint.sh

# Das 'main'-Verzeichnis als Volume deklarieren
# Hier liegen Konfigurationsdateien (server.cfg) und Mods/Maps (.iwd)
# Dadurch bleiben Änderungen auch nach einem Neustart des Containers erhalten
VOLUME ["/home/cod2server/server/main"]

# Standard-Port für Call of Duty 2
EXPOSE 28960/udp

# Das Startskript als Entrypoint festlegen
ENTRYPOINT ["/home/cod2server/entrypoint.sh"]
